void ReadParameterFile(string ParameterFile, ParamStruct &params)
{
	int NumLines;
	string par, parameter;
	vector<string> lines, str;
	size_t position;

	ReadLines(ParameterFile, lines, "parameter file");
	ProcessLinesForReadingParameters(lines);
	NumLines=lines.size();

	for (int i=0;i<NumLines;i++)
	{
		position=lines[i].find(" ");
		Tokenize(lines[i], " ", str);
		par=str[0];
		parameter=str[1];
		if (par=="AngleBin") params.AngleBin=StrToFloat(parameter);
		else if (par=="AngleFile") params.AngleFile=parameter;
		else if (par=="AngularCutOff") params.AngularCutOff=StrToFloat(parameter);
		else if (par=="AngularDependence") params.AngularDependence=StrToBool(parameter);
		else if (par=="AngularDependence2") params.AngularDependence2=StrToBool(parameter);
		else if (par=="AssignCubes") params.AssignCubes=parameter;
		else if (par=="AtomTypesGofRFile") params.AtomTypesGofRFile=parameter;
		else if (par=="BeginFit") params.BeginFit=StrToInt(parameter);
		else if (par=="BoolFFT") params.BoolFFT=StrToBool(parameter);
		else if (par=="BoolMerge") params.BoolMerge=StrToBool(parameter);
		else if (par=="BoxSize") params.BoxSize=StrToFloat(parameter);
		else if (par=="CalcNoHydrationIntensity") params.CalcNoHydrationIntensity=StrToBool(parameter);
		else if (par=="CalcPrFromExperiment") params.CalcPrFromExperiment=StrToBool(parameter);
		else if (par=="CalcPrFromStructure") params.CalcPrFromStructure=StrToBool(parameter);
		else if (par=="CalcPrFromStructure2") params.CalcPrFromStructure2=StrToBool(parameter);
		else if (par=="CalcRg") params.CalcRg=StrToBool(parameter);
		else if (par=="CalcVacuumIntensity") params.CalcVacuumIntensity=StrToBool(parameter);
		else if (par=="CenterAtomsInBox") params.CenterAtomsInBox=StrToBool(parameter);
		else if (par=="ChargeRadiiScale") params.ChargeRadiiScale=StrToFloat(parameter);
		else if (par=="ConvexConcave") params.ConvexConcave=StrToBool(parameter);
		else if (par=="ConvexConcave2") params.ConvexConcave2=StrToBool(parameter);
		else if (par=="CubeSize") params.CubeSize=StrToFloat(parameter);
		else if (par=="DCDFiles") params.DCDFiles=parameter;
		else if (par=="DoFit") params.DoFit=StrToBool(parameter);
		else if (par=="DoTrajectory") params.DoTrajectory=StrToBool(parameter);
		else if (par=="ElectrostaticPotential") params.ElectrostaticPotential=StrToBool(parameter);
		else if (par=="ElectrostaticPotentialBinSize") params.ElectrostaticPotentialBinSize=StrToFloat(parameter);
		else if (par=="ElementsGofRFile") params.ElementsGofRFile=parameter;
		else if (par=="EndFit") params.EndFit=StrToInt(parameter);
		else if (par=="ExcludedVolumeSphereType") params.ExcludedVolumeSphereType=parameter;
		else if (par=="ExperimentFile") params.ExperimentFile=parameter;
		else if (par=="FFTType") params.FFTType=parameter;
		else if (par=="GofRFile") params.GofRFile=parameter;
		else if (par=="HydrationRadiusOption") params.HydrationRadiusOption=parameter;
		else if (par=="HydrationRadiusScale") params.HydrationRadiusScale=StrToFloat(parameter);
		else if (par=="HydrationSpacing") params.HydrationSpacing=StrToFloat(parameter);
		else if (par=="InputCubeDensityPdbFile") params.InputCubeDensityPdbFile=parameter;
		else if (par=="IntensityOutputFile") params.IntensityOutputFile=parameter;
		else if (par=="MaxDistForZeroDensity") params.MaxDistForZeroDensity=StrToFloat(parameter);
		else if (par=="MaxElectrostaticPotential") params.MaxElectrostaticPotential=StrToFloat(parameter);
		else if (par=="MaxS") params.MaxS=StrToFloat(parameter);
		else if (par=="MinElectrostaticPotential") params.MinElectrostaticPotential=StrToFloat(parameter);
		else if (par=="MoveProtein") params.MoveProtein=StrToBool(parameter);
		else if (par=="NormalElementsGofRFile") params.NormalElementsGofRFile=parameter;
		else if (par=="NormalGofRFile") params.NormalGofRFile=parameter;
		else if (par=="NumPerEdge") params.NumPerEdge=StrToInt(parameter);
		else if (par=="OutputCubeDensityPdbFile") params.OutputCubeDensityPdbFile=parameter;
		else if (par=="PdbList") params.PdbList=parameter;
		else if (par=="PenaltyCoefficient") params.PenaltyCoefficient=StrToFloat(parameter);
		else if (par=="PhobicPhilic") params.PhobicPhilic=StrToBool(parameter);
		else if (par=="PrFile") params.PrFile=parameter;
		else if (par=="PrFromStructureFile") params.PrFromStructureFile=parameter;
		else if (par=="PrFromStructureFile2") params.PrFromStructureFile2=parameter;
		else if (par=="PrdfBulkDensity") params.PrdfBulkDensity=StrToFloat(parameter);
		else if (par=="PrmFile") params.PrmFile=parameter;
		else if (par=="PsfFile") params.PsfFile=parameter;
		else if (par=="RadiusCarbon") params.RadiusCarbon=StrToFloat(parameter);
		else if (par=="RadiusHydrationShell") params.RadiusHydrationShell=StrToFloat(parameter);
		else if (par=="RadiusHydrogen") params.RadiusHydrogen=StrToFloat(parameter);
		else if (par=="RadiusIron") params.RadiusIron=StrToFloat(parameter);
		else if (par=="RadiusNitrogen") params.RadiusNitrogen=StrToFloat(parameter);
		else if (par=="RadiusOxygen") params.RadiusOxygen=StrToFloat(parameter);
		else if (par=="RadiusPhosphorus") params.RadiusPhosphorus=StrToFloat(parameter);
		else if (par=="RadiusSodium") params.RadiusSodium=StrToFloat(parameter);
		else if (par=="RadiusSulfur") params.RadiusSulfur=StrToFloat(parameter);
		else if (par=="ReadAngleFile") params.ReadAngleFile=StrToBool(parameter);
		else if (par=="ReadUnknownResidues") params.ReadUnknownResidues=StrToBool(parameter);
		else if (par=="ReadWaters") params.ReadWaters=StrToBool(parameter);
		else if (par=="RecBin") params.RecBin=StrToFloat(parameter);
		else if (par=="RemoveCavities") params.RemoveCavities=parameter;
		else if (par=="RoundGrid") params.RoundGrid=StrToBool(parameter);
		else if (par=="RtfFile") params.RtfFile=parameter;
		else if (par=="ScatteringType") params.ScatteringType=parameter;
		else if (par=="SecondNearestNeighbor") params.SecondNearestNeighbor=StrToBool(parameter);
		else if (par=="SolventOption") params.SolventOption=parameter;
		else if (par=="SphereRadius") params.SphereRadius=StrToFloat(parameter);
		else if (par=="TotalElectronsFile") params.TotalElectronsFile=parameter;
		else if (par=="UniformHydrationShell") params.UniformHydrationShell=StrToBool(parameter);
		else if (par=="UseChargeRadii") params.UseChargeRadii=StrToBool(parameter);
		else if (par=="UseCharges") params.UseCharges=StrToBool(parameter);
		else if (par=="UseWaterSphere") params.UseWaterSphere=StrToBool(parameter);
		else if (par=="VDWOffSet") params.VDWOffSet=StrToFloat(parameter);
		else if (par=="VDWRadiusOption") params.VDWRadiusOption=parameter;
		else if (par=="VDWScale") params.VDWScale=StrToFloat(parameter);
		else if (par=="VectorsPerInclination") params.VectorsPerInclination=StrToInt(parameter);
		else if (par=="VolumeOption") params.VolumeOption=parameter;
		else if (par=="XBoxLength") params.XBoxLength=StrToFloat(parameter);
		else if (par=="XOrigin") params.XOrigin=StrToFloat(parameter);
		else if (par=="YBoxLength") params.YBoxLength=StrToFloat(parameter);
		else if (par=="YOrigin") params.YOrigin=StrToFloat(parameter);
		else if (par=="ZBoxLength") params.ZBoxLength=StrToFloat(parameter);
		else if (par=="ZOrigin") params.ZOrigin=StrToFloat(parameter);
		else if (par=="bin") params.bin=StrToFloat(parameter);
		else if (par=="contrast") params.contrast=StrToFloat(parameter);
		else if (par=="excluded") params.excluded=parameter;
		else if (par=="histogram") params.histogram=parameter;
		else if (par=="hsdensity") params.hsdensity=StrToFloat(parameter);
		else if (par=="lmax") params.lmax=StrToInt(parameter);
		else if (par=="maxhs") params.maxhs=StrToFloat(parameter);
		else if (par=="nDCDFiles") params.nDCDFiles=StrToInt(parameter);
		else if (par=="nstructures") params.nstructures=StrToInt(parameter);
		else if (par=="points") params.points=StrToInt(parameter);
		else if (par=="skip") params.skip=StrToInt(parameter);
		else if (par=="verbose") params.verbose=StrToBool(parameter);
		else if (par=="xyz") params.xyz=parameter;
		else
		{
			cout <<"ERROR: Unrecognized parameter "<<par<<endl;
			exit(EXIT_FAILURE);
		}
	}
}
